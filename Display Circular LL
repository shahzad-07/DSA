import java.util.*;

class Node
{
    int data;
    Node next;
    Node(int data)
    {
        this.data = data;
        this.next = null;
    }
}

class classname
{
    private Node tail;
    private Node head;

    public void addtoEmpty(int data)
    {
        Node newNode = new Node(data);
        head = newNode;
        tail = newNode;
        tail.next = head;
    }

    public void addToEnd(int data)
    {
        if(head == null)
        {
            addtoEmpty(data);
            return;
        }
        Node newNode = new Node(data);
        tail.next = newNode;
        tail = newNode;
        tail.next = head;   
    }

    public void display()
    {
        if(head == null)
        {
            System.out.println("Empty");
            return;
        }
        Node current = head;
        do
        {
            System.out.print(current.data + "   ");
            current = current.next;
        }while(current != head);
    }

    public static void main(String args[])
    {
        classname cl1 = new classname();
        
        cl1.addToEnd(1);
        cl1.addToEnd(2);
        cl1.addToEnd(3);
        cl1.addToEnd(4);

        cl1.display();
    }
}



/*
import java.util.*;

class classname
{
    public static void display(LinkedList<Integer> cl)
    {
        if(cl.isEmpty())
        {
            System.out.println("Empty");
            return;
        }

        int size = cl.size();
        int index = 0;

        for(int i=0; i<size; i++)
        {
            System.out.print(cl.get(i) + "  ");
            index++;
            if(index == size)
            {
                break;
            }
        }
    }

    public static void main(String args[])
    {
        LinkedList<Integer> cl = new LinkedList<>();

        cl.add(1);
        cl.add(2);
        cl.add(3);
        cl.add(4);

        cl.addFirst(cl.getLast());

        display(cl);
    }
}
*/
