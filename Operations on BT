import java.util.Scanner;

class Node
{
	int data;
	Node left;
	Node right;

	public Node(int data)
	{
		this.data = data;
	}
}

class classname
{
	static Scanner sc = null;
	public static void main(String args[])
	{
		sc = new Scanner(System.in);

		Node root = createTree();
		preorder(root);
		System.out.println(count(root));
		System.out.println(sum(root));
		System.out.println(height(root));
		System.out.println(leaf(root));
		System.out.println(nonleaf(root));
	}

	public static Node createTree()
	{
		Node root = null;

		System.out.println("Enter Value : ");
		int data = sc.nextInt();

		if(data == -1) return null;

		root = new Node(data);
		System.out.println("Enter left of : " + data);
		root.left = createTree();
		System.out.println("Enter right of : " + data);
		root.right = createTree();

		return root;
	}

	public static void preorder(Node root)
	{
		if(root == null)
		{
			return;
		}
		System.out.println(root.data + "	");
		preorder(root.left);
		preorder(root.right);
	}

	public static int count(Node root)
	{
		if(root == null)
		{
			return 0;
		}
		int x = count(root.left);
		int y = count(root.right);
		return x+y+1;
	}

	public static int sum(Node root)
	{
		if(root == null)
		{
			return 0;
		}
		int x = count(root.left);
		int y = count(root.right);
		return x+y+root.data;
	}

	public static int height(Node root)
	{
		if(root == null)
		{
			return 0;
		}
		int x = count(root.left);
		int y = count(root.right);
		return Math.max(x, y) + 1;
	}

	public static int leaf(Node root)
	{
		if(root == null)
		{
			return 0;
		}
		else if(root.left == null && root.right == null)
		{
			return 1;
		}
		else
		{
			int x = leaf(root.left);
			int y = leaf(root.right);
			return x+y;
		}
	}

	public static int nonleaf(Node root)
	{
		if(root == null || (root.left == null && root.right == null))
		{
			return 0;
		}
		else
		{
			int x = nonleaf(root.left);
			int y = nonleaf(root.right);
			return x+y+1;
		}
	}
}
